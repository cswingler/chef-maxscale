# Generated by Chef for <%= node['fqdn'] %>
# Local modifications will be overwritten.
#
# Global parameters
#

# Number of worker threads in MaxScale
[maxscale]
threads=<%= node['maxscale']['threads'] %>

# Define a monitor that can be used to determine the state and role of the servers.
<% if node['maxscale']['monitor']['module'] == 'mysqlmon' %>
[MySQL Monitor]
type=monitor
module=mysqlmon
servers=<%= @maxscale_servers.map { |server| server['name'] }.join(',') %>
user=<%= node['maxscale']['monitor']['user'] %>
passwd=<%= node['maxscale']['monitor']['pwd'] %>
monitor_interval=<%= node['maxscale']['monitor']['interval'] %>
backend_connect_timeout=<%= node['maxscale']['monitor']['backend_connect_timeout'] %>
backend_read_timeout=<%= node['maxscale']['monitor']['backend_read_timeout'] %>
backend_write_timeout=<%= node['maxscale']['monitor']['backend_write_timeout'] %>
detect_replication_lag=<%= node['maxscale']['monitor']['detect_replication_lag'] %>
detect_stale_master=<%= node['maxscale']['monitor']['detect_stale_master'] %>
<% end %>

<% if node['maxscale']['monitor']['module'] == 'galeramon' %>
[Galera Monitor]
type=monitor
module=galeramon
servers=<%= @maxscale_servers.map { |server| server['name'] }.join(',') %>
user=<%= node['maxscale']['monitor']['user'] %>
passwd=<%= node['maxscale']['monitor']['pwd'] %>
monitor_interval=<%= node['maxscale']['monitor']['monitor_interval'] %>
disable_master_failback=<%= node['maxscale']['monitor']['disable_master_failback'] %>
<% end %>

# Filter definition

<% @maxscale_filters.each do |filter| %>
[<%= filter['name'] %>]
type=filter
module=<%= filter['module'] %>
<% if filter['module'] == 'qlafilter' %>
options=<%= filter['optinos'] %>
<% end %>
<% if filter['module'] == 'regexfilter' %>
match=<%= filter['match'] %>
replace=<%= filter['replace'] %>
<% end %>
<% if filter['module'] == 'topfilter' %>
count=<%= filter['count'] %>
filebase=<%= filter['filebase'] %>
<% end %>
<% if filter['module'] == 'teefilter' %>
match=<%= filter['match'] %>
service=<%= filter['service'] %>
<% end %>

<% end %>

# A series of service definition

<% if node['maxscale']['read_connection_router']['enabled'] %>
[Read Connection Router]
type=service
router=readconnroute
servers=<%= @maxscale_servers.map { |server| server['name'] }.join(',') %>
user=<%= node['maxscale']['read_connection_router']['user'] %>
passwd=<%= node['maxscale']['read_connection_router']['pwd'] %>
router_options=<%= node['maxscale']['read_connection_router']['option'] %>
<% end %>

<% if node['maxscale']['rw_split_router']['enabled'] %>
[RW Split Router]
type=service
router=readwritesplit
servers=<%= @maxscale_servers.map { |server| server['name'] }.join(',') %>
user=<%= node['maxscale']['rw_split_router']['user'] %>
passwd=<%= node['maxscale']['rw_split_router']['pwd'] %>
#use_sql_variables_in=
#max_slave_connections=100%
#max_slave_replication_lag=21
#router_options=slave_selection_criteria=
#filters=fetch|qla
<% end %>

[Debug Interface]
type=service
router=debugcli

[CLI]
type=service
router=cli

# Listener definitions for the services

<% if node['maxscale']['read_connection_listener']['enabled'] %>
[Read Connection Listener]
type=listener
service=Read Connection Router
protocol=MySQLClient
address=<%= node['maxscale']['read_connection_listener']['address'] %>
port=<%= node['maxscale']['read_connection_listener']['port'] %>
<% end %>

<% if node['maxscale']['rw_split_listener']['enabled'] %>
[RW Split Listener]
type=listener
service=RW Split Router
protocol=MySQLClient
address=<%= node['maxscale']['rw_split_listener']['address'] %>
port=<%= node['maxscale']['rw_split_listener']['port'] %>
<% end %>

<% if node['maxscale']['debug_listener']['enabled'] %>
[Debug Listener]
type=listener
service=Debug Interface
protocol=telnetd
address=<%= node['maxscale']['debug_listener']['address'] %>
port=<%= node['maxscale']['debug_listener']['port'] %>
<% end %>

<% if node['maxscale']['cli_listener']['enabled'] %>
[CLI Listener]
type=listener
service=CLI
protocol=maxscaled
address=<%= node['maxscale']['cli_listener']['address'] %>
port=<%= node['maxscale']['cli_listener']['port'] %>
<% end %>

# Definition of the servers

<% @maxscale_servers.each do |server| %>
<% p server.class.name %>
[<%= server['name'] %>]
type=<%= server['type'] %>
address=<%= server['address'] %>
port=<%= server['port'] %>
protocol=<%= server['protocol'] %>

<% end %>
