# Generated by Chef for <%= node['fqdn'] %>
# Local modifications will be overwritten.
#
# Global parameters
#

# Number of worker threads in MaxScale
[maxscale]
threads=<%= node['maxscale']['threads'] %>

# Define a monitor that can be used to determine the state and role of the servers.
<% if node['maxscale']['monitor']['module'] == 'mysqlmon' %>
[MySQL Monitor]
type=monitor
module=mysqlmon
servers=<% node['maxscale']['server'].each do |server| %><%= server[:name] %>,<% end %>
user=<%= node['maxscale']['monitor']['user'] %>
passwd=<%= node['maxscale']['monitor']['pwd'] %>
monitor_interval=<%= node['maxscale']['monitor']['interval'] %>
#backend_connect_timeout=
#backend_read_timeout=
#backend_write_timeout=
#detect_replication_lag=
#detect_stale_master=
<% end %>

<% if node['maxscale']['monitor']['module'] == 'galeramon' %>
[Galera Monitor]
type=monitor
module=galeramon
servers=<% node['maxscale']['server'].each do |server| %><%= server[:name] %>,<% end %>
user=<%= node['maxscale']['monitor']['user'] %>
passwd=<%= node['maxscale']['monitor']['pwd'] %>
monitor_interval=<%= node['maxscale']['monitor']['monitor_interval'] %>
#disable_master_failback=
<% end %>

## Filter definition
#
# Type specifies the section
#
#	type=filter
#
# Module specifies which module implements the filter function
#
#	module=[qlafilter|regexfilter|topfilter|teefilter]
#
# Options specify the log file for Query Log Filter
#
#	options=<path to logfile>
#
# Match and replace are used in regexfilter
#
#	match=fetch
#	replace=select
#
# Count and filebase are used with topfilter to specify how many top queries are
# listed and where.
#
#	count=<count>
#	filebase=<path to output file>
#
# Match and service are used by tee filter to specify what queries should be
# duplicated and where the copy should be routed.
#
#	match=insert.*HighScore.*values
#	service=Cassandra
#
## Examples:

[qla]
type=filter
module=qlafilter
options=/tmp/QueryLog

[fetch]
type=filter
module=regexfilter
match=fetch
replace=select


# A series of service definition

<% if node['maxscale']['read_connection_router']['enabled'] %>
[Read Connection Router]
type=service
router=readconnroute
servers=<% node['maxscale']['server'].each do |server| %><%= server[:name] %>,<% end %>
user=<%= node['maxscale']['read_connection_router']['user'] %>
passwd=<%= node['maxscale']['read_connection_router']['pwd'] %>
router_options=<%= node['maxscale']['read_connection_router']['option'] %>
<% end %>

<% if node['maxscale']['rw_split_router']['enabled'] %>
[RW Split Router]
type=service
router=readwritesplit
servers=<% node['maxscale']['server'].each do |server| %><%= server[:name] %>,<% end %>
user=<%= node['maxscale']['rw_split_router']['user'] %>
passwd=<%= node['maxscale']['rw_split_router']['pwd'] %>
#use_sql_variables_in=
#max_slave_connections=100%
#max_slave_replication_lag=21
#router_options=slave_selection_criteria=
#filters=fetch|qla
<% end %>

[Debug Interface]
type=service
router=debugcli

[CLI]
type=service
router=cli

# Listener definitions for the services

<% if node['maxscale']['read_connection_listener']['enabled'] %>
[Read Connection Listener]
type=listener
service=Read Connection Router
protocol=MySQLClient
address=<%= node['maxscale']['read_connection_listener']['address'] %>
port=<%= node['maxscale']['read_connection_listener']['port'] %>
<% end %>

<% if node['maxscale']['rw_split_listener']['enabled'] %>
[RW Split Listener]
type=listener
service=RW Split Router
protocol=MySQLClient
address=<%= node['maxscale']['rw_split_listener']['address'] %>
port=<%= node['maxscale']['rw_split_listener']['port'] %>
<% end %>

<% if node['maxscale']['debug_listener']['enabled'] %>
[Debug Listener]
type=listener
service=Debug Interface
protocol=telnetd
address=<%= node['maxscale']['debug_listener']['address'] %>
port=<%= node['maxscale']['debug_listener']['port'] %>
<% end %>

<% if node['maxscale']['cli_listener']['enabled'] %>
[CLI Listener]
type=listener
service=CLI
protocol=maxscaled
address=<%= node['maxscale']['cli_listener']['address'] %>
port=<%= node['maxscale']['cli_listener']['port'] %>
<% end %>

# Definition of the servers

<% node['maxscale']['server'].each do |server| %>
[<%= server[:name] %>]
type=<%= server[:type] %>
address=<%= server[:address] %>
port=<%= server[:port] %>
protocol=<%= server[:protocol] %>

<% end %>
